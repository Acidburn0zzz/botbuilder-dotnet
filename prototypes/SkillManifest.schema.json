{
  "$id": "https://botframework.com/schemas/SkillManifest.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "version": "1.0.0",
  "title": "Skill Manifest",
  "description": "A schema for Bot Framework skill manifests",
  "definitions": {
    "endpoint": {
      "type":"object",
      "description": "Skill service endpoint.",
      "required": ["serviceUrl", "activities"],
      "properties": {
        "serviceUrl": {
          "type": "string",
          "format": "uri",
          "description": "The skill URL"
        },
        "activities": {
          "type":"array",
          "minItems": 1,
          "items": {
            "anyOf": [
              {"$ref": "#/definitions/messageActivity"},
              {"$ref": "#/definitions/eventActivity"}
            ]
          }
        }
      }
    },
    "eventActivity":{
      "type":"object",
      "description": "The description of the activity",
      "required": ["$id", "type", "name"],
      "properties": {
        "$id": {
          "type": "string",
          "description": "The identifier for activity type"
        },        
        "type":{
          "type":"string",
          "description": "The type of the activity (Event, Message, Invoke)",
          "enum": [ "Event"]
        },
        "name": {
          "type": "string",
          "description": "The name of the event"
        },
        "direction": {
          "type": "string",
          "description": "The name of the event",
          "enum": ["Inbound", "Outbound"]
        },
        "value":{
          "type":"object",
          "description": "An optional json object with parameters for the skill (defined as json schema)"
        },
        "resultValue":{
          "type":"object",
          "description": "An optional json object with parameters for the skill (defined as json schema)"
        },
        "triggerModels": {
          "type": "array",
          "items": {
            "anyOf": [
              {"$ref": "#/definitions/model"}
            ]
          }
        }
      }
    },
    "messageActivity":{
      "type":"object",
      "description": "The description of the activity",
      "required": ["$id", "type"],
      "properties": {
        "$id": {
          "type": "string",
          "description": "The identifier for activity type"
        },  
        "type":{
          "type":"string",
          "description": "The type of the activity (Event, Message, Invoke)",
          "enum": ["Message"]
        },
        "text": {
          "type": "string",
          "description": "The utterance to be sent to the skill"
        },
        "value":{
          "type":"object",
          "description": "The json schema for a parameter sent to the skill"
        },
        "resultValue":{
          "type":"object",
          "description": "The json schema for a parameter returned by the skill"
        },
        "triggerModels": {
          "type": "array",
          "items": {
            "anyOf": [
              {"$ref": "#/definitions/model"}
            ]
          }
        }
      }
    },
    "model":{
      "type":"object",
      "description": "The description of the activity",
      "properties": {
        "$id": {
          "type": "string",
          "description": "The identifier for activity type"
        }, 
        "url":{
          "type":"string",
          "format": "uri",
          "description": "the URL to the model"
        },
        "description": {
          "type": "string",
          "description": "Decription of the model"
        },
        "locale" : {
          "type": "string",
          "description": "The ISO locale for the language supported"
        }
      }
    }
  },
  "type": "object",
  "required": [
    "$id",
    "name",
    "version",
    "publisherName",
    "endpoints"
  ],
  "additionalProperties": true,
  "properties": {
    "$schema": {
      "type": "string",
      "format": "uri",
      "description": "The schema to verify this skill manifest against"
    },
    "$id": {
      "type": "string",
      "description": "The identifier for the skill manifest"
    },
    "name": {
      "type": "string",
      "description": "TODO"
    },
    "version": {
      "type": "string",
      "description": "The version for the skill in Major.Minor format"
    },
    "description": {
      "type": "string",
      "description": "A human readable description for the skill."
    },
    "publisherName": {
      "type": "string",
      "description": "The name of the skill publisher."
    },
    "privacyUrl": {
      "type": "string",
      "format": "uri",
      "description": "The URL with the privacy description for the skill."
    },
    "copyright": {
      "type": "string",
      "description": "The copyright for the skill."
    },    
    "license": {
      "type": "string",
      "description": "The licence agreement for the skill"
    },
    "iconUrl": {
      "type": "string",
      "format": "uri",
      "description": "Optional icon to be shown for the skill"
    },
    "tags": {
      "type": "array",
      "uniqueItems": true,
      "description": "An array of strings with tags for the skill"
    },

    "endpoints":{
      "type":"array",
      "uniqueItems": true,
      "description": "A list of endpoints supported by the skill",
      "minItems": 1,
      "items": {
				"$ref": "#/definitions/endpoint"
			}
    },

    "activities":{
      "type":"array",
      "uniqueItems": true,
      "description": "A list of activities supported by the skill",
      "minItems": 1,
      "items": {
        "anyOf": [
          {"$ref": "#/definitions/messageActivity"},
          {"$ref": "#/definitions/eventActivity"}
        ]
			}
    },

    "models":{
      "type":"array",
      "uniqueItems": true,
      "description": "Lauguage models used by the skill",
      "items": {
				"$ref": "#/definitions/model"
      }
    }
  }
}